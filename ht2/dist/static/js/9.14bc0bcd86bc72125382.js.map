{"version":3,"sources":["webpack:///./src/views/financial/banklist.vue","webpack:///./src/views/financial/banklist.vue?08e7","webpack:///./src/views/financial/banklist.vue?f200","webpack:///./node_modules/exif-js/exif.js"],"names":["views_financial_banklist","data","tabletwoData","shujuData","searchform","bankname","img_url","this","show","submitform","id","imageUrl","img","type","created","_this","asyncToGenerator_default","regenerator_default","a","mark","_callee","wrap","_context","prev","next","bank_list","stop","methods","page","_this2","_callee2","banklist","_context2","service","name","sent","status","list","$message","success","info","error","pushImg","e","_this3","_callee3","formData","_context3","FormData","console","log","append","target","files","headers","util","getCookie","get","axios","post","transformRequest","then","res","imges","catch","onSearchClick","addMerberClick","delClick","row","_this4","$confirm","confirmButtonText","cancelButtonText","_callee4","_context4","delBank","token","message","modifyClick","logo","onSubmitClick","_this5","_callee5","addBank","_addBank","_context5","clone","handleCurrentChange","val","mounted","selectortype_template_index_0_src_views_financial_banklist","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","inline","model","label","placeholder","value","callback","$$v","$set","expression","_v","on","click","$event","staticStyle","margin-top","header-cell-style","background","color","border","prop","resizable","align","width","scopedSlots","_u","key","fn","scope","src","alt","margin-left","size","directives","rawName","height","rules","text-align","clearable","ref","accept","enctype","multiple","change","layout","total","num","page-size","current-change","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","__WEBPACK_AMD_DEFINE_RESULT__","debug","EXIF","obj","EXIFwrapped","module","exports","ExifTags","Tags","36864","40960","40961","40962","40963","37121","37122","37500","37510","40964","36867","36868","37520","37521","37522","33434","33437","34850","34852","34855","34856","37377","37378","37379","37380","37381","37382","37383","37384","37385","37396","37386","41483","41484","41486","41487","41488","41492","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","40965","42016","TiffTags","256","257","34665","34853","258","259","262","274","277","284","530","531","282","283","296","273","278","279","513","514","301","318","319","529","532","306","270","271","272","305","315","33432","GPSTags","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","IFD1Tags","StringValues","ExposureProgram","MeteringMode","255","LightSource","Flash","31","32","65","69","71","73","77","79","89","93","95","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","imageHasData","getImageData","handleBinaryFile","binFile","findEXIFinJPEG","exifdata","iptcdata","file","dataView","DataView","byteLength","getUint8","offset","length","isFieldSegmentStart","nameHeaderLength","startOffset","sectionLength","getUint16","readIPTCData","findIPTCinJPEG","isXmpEnabled","xmpdata","self","dom","DOMParser","getStringFromDB","xmpString","xmpEndIndex","indexOf","indexOfXmp","substring","slice","domDocument","parseFromString","xml2Object","findXMPinJPEG","call","test","base64","contentType","match","replace","binary","atob","len","buffer","ArrayBuffer","view","Uint8Array","i","charCodeAt","base64ToArrayBuffer","fileReader","FileReader","onload","result","url","http","XMLHttpRequest","open","responseType","response","send","objectURLToBlob","blob","readAsArrayBuffer","Blob","File","marker","readEXIFData","IptcFieldMap","120","110","55","80","85","122","105","116","fieldValue","fieldName","dataSize","segmentType","segmentStartPos","getInt16","hasOwnProperty","Array","push","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","tag","entries","tags","readTagValue","vals","n","numerator","denominator","numValues","getUint32","valueOffset","Number","getInt32","start","outstr","String","fromCharCode","exifData","gpsData","tiffOffset","firstIFDOffset","ExifIFDPointer","GPSInfoIFDPointer","IFD1OffsetPointer","getNextIFDOffset","thumbTags","JpegIFOffset","JpegIFByteCount","tOffset","tLength","readThumbnailImage","xml2json","xml","json","nodeType","attributes","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","child","old","children","idx","itemAtt","dataKey","dataValue","undefined","textContent","enableXmp","disableXmp","getData","Image","HTMLImageElement","complete","getTag","getIptcTag","getAllTags","getAllIptcTags","pretty","strPretty","readFromBinaryFile","apply"],"mappings":"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","file":"static/js/9.14bc0bcd86bc72125382.js","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport util from \"@/utils/utils.js\";\nimport service from \"@/service/service.js\";\nimport axios from \"axios\";\nimport Exif from \"exif-js\";\nexport default {\n  data() {\n    return {\n      tabletwoData: [],\n      shujuData: \"\",\n      searchform: {\n        bankname: \"\"\n      },\n      img_url: this.img_url,\n      show: false,\n      submitform: {\n        id: \"\",\n        bankname: \"\"\n      },\n      imageUrl: \"\",\n      img: \"\",\n      type: 1,\n      id: \"\"\n    };\n  },\n  async created() {\n    this.bank_list(1);\n  },\n  methods: {\n    async bank_list(page) {\n      const banklist = await service.banklist({\n        name: this.searchform.bankname,\n        page: page\n      });\n      if (banklist.data.status == 1) {\n        this.shujuData = banklist.data.data;\n        this.tabletwoData = banklist.data.data.list;\n        this.$message.success(banklist.data.info);\n      } else {\n        this.$message.error(banklist.data.info);\n      }\n    },\n    // 上传图片\n    async pushImg(e) {\n      let formData = new FormData();\n      console.log(formData);\n      formData.append(\"pic\", e.target.files[0]);\n      console.log(11, this.headers);\n      formData.append(\"token\", util.getCookie(\"token\"));\n      console.log(formData.get(\"pic\"));\n      await axios\n        .post(\"http://118.190.174.163//admin/bank/uploadPic\", formData, {\n          //\tawait axios.post(\"http://gtyz.qianyiwangluo.com/admin/Goods/uploadPic\",formData, {\n          transformRequest: [data => data],\n          headers: this.headers\n        })\n        .then(res => {\n          this.img = res.data.data;\n          (this.imageUrl = this.img_url + this.img), (this.imges = this.img);\n          console.log(123, res.data.data);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    },\n    //搜索\n    onSearchClick() {\n      this.bank_list(1);\n    },\n    //添加银行\n    addMerberClick() {\n      this.show = true;\n      this.type = 1;\n      this.submitform.bankname = \"\";\n      this.imges = \"\";\n      this.imageUrl = \"\";\n      this.img = \"\";\n    },\n    //删除\n    delClick(row) {\n      this.$confirm(\"是否继续删除?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(async () => {\n          const delBank = await service.delBank({\n            token: util.getCookie(\"token\"),\n            id: row.id\n          });\n          if (delBank.data.status == 1) {\n            this.$message.success(\"删除成功\");\n          }\n          this.bank_list(1);\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"已取消删除\"\n          });\n        });\n    },\n    //编辑\n    modifyClick(row) {\n      this.show = true;\n      this.submitform.bankname = row.name;\n      this.imageUrl = row.logo;\n      this.img = row.logo;\n      this.imges = row.logo;\n      this.id = row.id;\n      this.type = 2;\n      this.bank_list(1);\n    },\n    //提交\n    async onSubmitClick(row) {\n      if (this.type == 1) {\n        const addBank = await service.addBank({\n          name: this.submitform.bankname,\n          logo: this.imges,\n          id: \"\"\n        });\n        console.log(this.imageUrl);\n        if (addBank.data.status == 1) {\n          this.show = false;\n          this.submitform.bankname = \"\";\n          this.imges = \"\";\n          this.imageUrl = \"\";\n          this.$message.success(addBank.data.info);\n          this.bank_list(1);\n        } else {\n          this.$message.error(addBank.data.info);\n        }\n      } else if (this.type == 2) {\n        const addBank = await service.addBank({\n          name: this.submitform.bankname,\n          logo: this.imges,\n          id: this.id\n        });\n        console.log(this.imageUrl);\n        if (addBank.data.status == 1) {\n          this.show = false;\n          this.$message.success(addBank.data.info);\n          this.bank_list(1);\n        } else {\n          this.$message.error(addBank.data.info);\n        }\n      }\n    },\n    //返回\n    clone() {\n      this.show = false;\n    },\n    // 分页\n    handleCurrentChange(val) {\n      this.bank_list(val);\n    }\n  },\n  mounted() {}\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/financial/banklist.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"banklist\"},[_c('el-form',{staticClass:\"searchform\",attrs:{\"inline\":true,\"model\":_vm.searchform}},[_c('el-form-item',{attrs:{\"label\":\"银行名称:\"}},[_c('el-input',{attrs:{\"placeholder\":\"银行名称\"},model:{value:(_vm.searchform.bankname),callback:function ($$v) {_vm.$set(_vm.searchform, \"bankname\", $$v)},expression:\"searchform.bankname\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onSearchClick}},[_vm._v(\"搜索\")])],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.addMerberClick()}}},[_vm._v(\"添加银行\")])],1)],1),_vm._v(\" \"),_c('el-table',{staticStyle:{\"margin-top\":\"10px\"},attrs:{\"data\":_vm.tabletwoData,\"header-cell-style\":{ background: '#F9F9F9', color: '#606266' },\"border\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"银行ID\",\"prop\":\"id\",\"resizable\":false,\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"银行名称\",\"prop\":\"name\",\"resizable\":false,\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"图片\",\"prop\":\"logo\",\"width\":\"500px\",\"resizable\":false,\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('img',{staticClass:\"scope-img\",attrs:{\"src\":scope.row.logo,\"alt\":\"\"}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"resizable\":false,\"align\":\"center\",\"width\":\"350px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{staticStyle:{\"margin-left\":\"10px\"},attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.delClick(scope.row)}}},[_vm._v(\"删除\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.modifyClick(scope.row)}}},[_vm._v(\"编辑\")])]}}])})],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show),expression:\"show\"}],staticClass:\"mark\"},[_c('div',{staticClass:\"mark-content\"},[_c('div',{staticClass:\"hytj\"},[_vm._v(\"银行添加\")]),_vm._v(\" \"),_c('el-form',{staticClass:\"submitform\",attrs:{\"model\":_vm.submitform}},[_c('table',{staticStyle:{\"width\":\"90%\",\"height\":\"80px\",\"border\":\"1px dashed #000\",\"background\":\"#F9F9F9\"},attrs:{\"rules\":\"all\"}},[_c('tr',{staticStyle:{\"background\":\"#EEEEEE\"}},[_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"名称\")]),_vm._v(\" \"),_c('td',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"内容\")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticClass:\"td1\"},[_vm._v(\"银行名称:\")]),_vm._v(\" \"),_c('td',{staticClass:\"td2\"},[_c('el-input',{attrs:{\"size\":\"small\",\"clearable\":\"\"},model:{value:(_vm.submitform.bankname),callback:function ($$v) {_vm.$set(_vm.submitform, \"bankname\", $$v)},expression:\"submitform.bankname\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',{staticClass:\"td1\"},[_vm._v(\"银行logo:\")]),_vm._v(\" \"),_c('td',{staticClass:\"td2 imgdw\"},[_c('div',{staticClass:\"sctp\"},[_c('input',{ref:\"upload\",staticClass:\"upload\",attrs:{\"id\":\"load\",\"type\":\"file\",\"accept\":\"image/*\",\"value\":\"上传头像\",\"enctype\":\"multipart/form-data\",\"multiple\":\"true\"},on:{\"change\":function($event){return _vm.pushImg($event)}}}),_vm._v(\" \"),(_vm.img == '')?_c('i',{staticClass:\"el-icon-plus avatar-uploader-icon\"}):_c('img',{attrs:{\"src\":_vm.img,\"alt\":\"\"}})])])]),_vm._v(\" \"),_c('tr',[_c('td'),_vm._v(\" \"),_c('td',{staticClass:\"td2\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.onSubmitClick}},[_vm._v(\"提交\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.clone}},[_vm._v(\"返回\")])],1)])])])],1)]),_vm._v(\" \"),_c('div',{staticClass:\"block\"},[_c('el-pagination',{attrs:{\"layout\":\"total, prev, pager, next, jumper\",\"total\":_vm.shujuData.num,\"page-size\":15},on:{\"current-change\":_vm.handleCurrentChange}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7982caa0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vux-loader/src/before-template-compiler-loader.js!./node_modules/vux-loader/src/template-loader.js!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/financial/banklist.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7982caa0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./banklist.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./banklist.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./banklist.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7982caa0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vux-loader/src/before-template-compiler-loader.js!../../../node_modules/vux-loader/src/template-loader.js!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./banklist.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7982caa0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/financial/banklist.vue\n// module id = null\n// module chunks = ","(function() {\n\n    var debug = false;\n\n    var root = this;\n\n    var EXIF = function(obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = EXIF;\n        }\n        exports.EXIF = EXIF;\n    } else {\n        root.EXIF = EXIF;\n    }\n\n    var ExifTags = EXIF.Tags = {\n\n        // version tags\n        0x9000 : \"ExifVersion\",             // EXIF version\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\n\n        // colorspace tags\n        0xA001 : \"ColorSpace\",              // Color space information tag\n\n        // image configuration\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\n\n        // user information\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\n        0x9286 : \"UserComment\",             // Comments by user\n\n        // related file\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\n\n        // date and time\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\n        0x829D : \"FNumber\",                 // F number\n        0x8822 : \"ExposureProgram\",         // Exposure program\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\n        0x9202 : \"ApertureValue\",           // Lens aperture\n        0x9203 : \"BrightnessValue\",         // Value of brightness\n        0x9204 : \"ExposureBias\",            // Exposure bias\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\n        0x9207 : \"MeteringMode\",            // Metering mode\n        0x9208 : \"LightSource\",             // Kind of light source\n        0x9209 : \"Flash\",                   // Flash status\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\n        0xA20C : \"SpatialFrequencyResponse\",    //\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\n        0xA217 : \"SensingMethod\",           // Image sensor type\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\n        0xA401 : \"CustomRendered\",          // Special processing\n        0xA402 : \"ExposureMode\",            // Exposure mode\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406 : \"SceneCaptureType\",        // Type of scene\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\n        0xA40B : \"DeviceSettingDescription\",    //\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\n\n        // other tags\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\n    };\n\n    var TiffTags = EXIF.TiffTags = {\n        0x0100 : \"ImageWidth\",\n        0x0101 : \"ImageHeight\",\n        0x8769 : \"ExifIFDPointer\",\n        0x8825 : \"GPSInfoIFDPointer\",\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0x0102 : \"BitsPerSample\",\n        0x0103 : \"Compression\",\n        0x0106 : \"PhotometricInterpretation\",\n        0x0112 : \"Orientation\",\n        0x0115 : \"SamplesPerPixel\",\n        0x011C : \"PlanarConfiguration\",\n        0x0212 : \"YCbCrSubSampling\",\n        0x0213 : \"YCbCrPositioning\",\n        0x011A : \"XResolution\",\n        0x011B : \"YResolution\",\n        0x0128 : \"ResolutionUnit\",\n        0x0111 : \"StripOffsets\",\n        0x0116 : \"RowsPerStrip\",\n        0x0117 : \"StripByteCounts\",\n        0x0201 : \"JPEGInterchangeFormat\",\n        0x0202 : \"JPEGInterchangeFormatLength\",\n        0x012D : \"TransferFunction\",\n        0x013E : \"WhitePoint\",\n        0x013F : \"PrimaryChromaticities\",\n        0x0211 : \"YCbCrCoefficients\",\n        0x0214 : \"ReferenceBlackWhite\",\n        0x0132 : \"DateTime\",\n        0x010E : \"ImageDescription\",\n        0x010F : \"Make\",\n        0x0110 : \"Model\",\n        0x0131 : \"Software\",\n        0x013B : \"Artist\",\n        0x8298 : \"Copyright\"\n    };\n\n    var GPSTags = EXIF.GPSTags = {\n        0x0000 : \"GPSVersionID\",\n        0x0001 : \"GPSLatitudeRef\",\n        0x0002 : \"GPSLatitude\",\n        0x0003 : \"GPSLongitudeRef\",\n        0x0004 : \"GPSLongitude\",\n        0x0005 : \"GPSAltitudeRef\",\n        0x0006 : \"GPSAltitude\",\n        0x0007 : \"GPSTimeStamp\",\n        0x0008 : \"GPSSatellites\",\n        0x0009 : \"GPSStatus\",\n        0x000A : \"GPSMeasureMode\",\n        0x000B : \"GPSDOP\",\n        0x000C : \"GPSSpeedRef\",\n        0x000D : \"GPSSpeed\",\n        0x000E : \"GPSTrackRef\",\n        0x000F : \"GPSTrack\",\n        0x0010 : \"GPSImgDirectionRef\",\n        0x0011 : \"GPSImgDirection\",\n        0x0012 : \"GPSMapDatum\",\n        0x0013 : \"GPSDestLatitudeRef\",\n        0x0014 : \"GPSDestLatitude\",\n        0x0015 : \"GPSDestLongitudeRef\",\n        0x0016 : \"GPSDestLongitude\",\n        0x0017 : \"GPSDestBearingRef\",\n        0x0018 : \"GPSDestBearing\",\n        0x0019 : \"GPSDestDistanceRef\",\n        0x001A : \"GPSDestDistance\",\n        0x001B : \"GPSProcessingMethod\",\n        0x001C : \"GPSAreaInformation\",\n        0x001D : \"GPSDateStamp\",\n        0x001E : \"GPSDifferential\"\n    };\n\n     // EXIF 2.3 Spec\n    var IFD1Tags = EXIF.IFD1Tags = {\n        0x0100: \"ImageWidth\",\n        0x0101: \"ImageHeight\",\n        0x0102: \"BitsPerSample\",\n        0x0103: \"Compression\",\n        0x0106: \"PhotometricInterpretation\",\n        0x0111: \"StripOffsets\",\n        0x0112: \"Orientation\",\n        0x0115: \"SamplesPerPixel\",\n        0x0116: \"RowsPerStrip\",\n        0x0117: \"StripByteCounts\",\n        0x011A: \"XResolution\",\n        0x011B: \"YResolution\",\n        0x011C: \"PlanarConfiguration\",\n        0x0128: \"ResolutionUnit\",\n        0x0201: \"JpegIFOffset\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n        0x0202: \"JpegIFByteCount\", // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n        0x0211: \"YCbCrCoefficients\",\n        0x0212: \"YCbCrSubSampling\",\n        0x0213: \"YCbCrPositioning\",\n        0x0214: \"ReferenceBlackWhite\"\n    };\n\n    var StringValues = EXIF.StringValues = {\n        ExposureProgram : {\n            0 : \"Not defined\",\n            1 : \"Manual\",\n            2 : \"Normal program\",\n            3 : \"Aperture priority\",\n            4 : \"Shutter priority\",\n            5 : \"Creative program\",\n            6 : \"Action program\",\n            7 : \"Portrait mode\",\n            8 : \"Landscape mode\"\n        },\n        MeteringMode : {\n            0 : \"Unknown\",\n            1 : \"Average\",\n            2 : \"CenterWeightedAverage\",\n            3 : \"Spot\",\n            4 : \"MultiSpot\",\n            5 : \"Pattern\",\n            6 : \"Partial\",\n            255 : \"Other\"\n        },\n        LightSource : {\n            0 : \"Unknown\",\n            1 : \"Daylight\",\n            2 : \"Fluorescent\",\n            3 : \"Tungsten (incandescent light)\",\n            4 : \"Flash\",\n            9 : \"Fine weather\",\n            10 : \"Cloudy weather\",\n            11 : \"Shade\",\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\n            17 : \"Standard light A\",\n            18 : \"Standard light B\",\n            19 : \"Standard light C\",\n            20 : \"D55\",\n            21 : \"D65\",\n            22 : \"D75\",\n            23 : \"D50\",\n            24 : \"ISO studio tungsten\",\n            255 : \"Other\"\n        },\n        Flash : {\n            0x0000 : \"Flash did not fire\",\n            0x0001 : \"Flash fired\",\n            0x0005 : \"Strobe return light not detected\",\n            0x0007 : \"Strobe return light detected\",\n            0x0009 : \"Flash fired, compulsory flash mode\",\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\n            0x0018 : \"Flash did not fire, auto mode\",\n            0x0019 : \"Flash fired, auto mode\",\n            0x001D : \"Flash fired, auto mode, return light not detected\",\n            0x001F : \"Flash fired, auto mode, return light detected\",\n            0x0020 : \"No flash function\",\n            0x0041 : \"Flash fired, red-eye reduction mode\",\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod : {\n            1 : \"Not defined\",\n            2 : \"One-chip color area sensor\",\n            3 : \"Two-chip color area sensor\",\n            4 : \"Three-chip color area sensor\",\n            5 : \"Color sequential area sensor\",\n            7 : \"Trilinear sensor\",\n            8 : \"Color sequential linear sensor\"\n        },\n        SceneCaptureType : {\n            0 : \"Standard\",\n            1 : \"Landscape\",\n            2 : \"Portrait\",\n            3 : \"Night scene\"\n        },\n        SceneType : {\n            1 : \"Directly photographed\"\n        },\n        CustomRendered : {\n            0 : \"Normal process\",\n            1 : \"Custom process\"\n        },\n        WhiteBalance : {\n            0 : \"Auto white balance\",\n            1 : \"Manual white balance\"\n        },\n        GainControl : {\n            0 : \"None\",\n            1 : \"Low gain up\",\n            2 : \"High gain up\",\n            3 : \"Low gain down\",\n            4 : \"High gain down\"\n        },\n        Contrast : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        Saturation : {\n            0 : \"Normal\",\n            1 : \"Low saturation\",\n            2 : \"High saturation\"\n        },\n        Sharpness : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        SubjectDistanceRange : {\n            0 : \"Unknown\",\n            1 : \"Macro\",\n            2 : \"Close view\",\n            3 : \"Distant view\"\n        },\n        FileSource : {\n            3 : \"DSC\"\n        },\n\n        Components : {\n            0 : \"\",\n            1 : \"Y\",\n            2 : \"Cb\",\n            3 : \"Cr\",\n            4 : \"R\",\n            5 : \"G\",\n            6 : \"B\"\n        }\n    };\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!(img.exifdata);\n    }\n\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open(\"GET\", url, true);\n        http.responseType = \"blob\";\n        http.onload = function(e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n            if (EXIF.isXmpEnabled) {\n               var xmpdata= findXMPinJPEG(binFile);\n               img.xmpdata = xmpdata || {};               \n            }\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) { // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function(e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function() {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw \"Could not load image\";\n                    }\n                    http = null;\n                };\n                http.open(\"GET\", img.src, true);\n                http.responseType = \"arraybuffer\";\n                http.send(null);\n            }\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function(e) {\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log(\"Found 0xFFE1 marker\");\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset+2);\n            }\n\n        }\n\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n\n        var isFieldSegmentStart = function(dataView, offset){\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset+1) === 0x42 &&\n                dataView.getUint8(offset+2) === 0x49 &&\n                dataView.getUint8(offset+3) === 0x4D &&\n                dataView.getUint8(offset+4) === 0x04 &&\n                dataView.getUint8(offset+5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if ( isFieldSegmentStart(dataView, offset )){\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset+7);\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if(nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n\n            }\n\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n    var IptcFieldMap = {\n        0x78 : 'caption',\n        0x6E : 'credit',\n        0x19 : 'keywords',\n        0x37 : 'dateCreated',\n        0x50 : 'byline',\n        0x55 : 'bylineTitle',\n        0x7A : 'captionWriter',\n        0x69 : 'headline',\n        0x74 : 'copyright',\n        0x0F : 'category'\n    };\n    function readIPTCData(file, startOffset, sectionLength){\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while(segmentStartPos < startOffset+sectionLength) {\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\n                segmentType = dataView.getUint8(segmentStartPos+2);\n                if(segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos+3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\n                    // Check if we already stored a value with this name\n                    if(data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if(data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        }\n                        else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    }\n                    else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset, tag,\n            i;\n\n        for (i=0;i<entries;i++) {\n            entryOffset = dirStart + i*12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset+2, !bigEnd),\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\n            offset,\n            vals, val, n,\n            numerator, denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return getStringFromDB(file, offset, numValues-1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    /**\n    * Given an IFD (Image File Directory) start offset\n    * returns an offset to next IFD or 0 if it's the last IFD.\n    */\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\n        //the first 2bytes means the number of directory entries contains in this IFD\n        var entries = dataView.getUint16(dirStart, !bigEnd);\n\n        // After last directory entry, there is a 4bytes of data,\n        // it means an offset to next IFD.\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n    }\n\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\n        // get the IFD1 offset\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\n\n        if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n        }\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n        }\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\n\n        // EXIF 2.3 specification for JPEG format thumbnail\n\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n        if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n\n            switch (thumbTags['Compression']) {\n                case 6:\n                    // console.log('Thumbnail image format is JPEG');\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                    // extract the thumbnail\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                        var tLength = thumbTags.JpegIFByteCount;\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                            type: 'image/jpeg'\n                        });\n                    }\n                break;\n\n            case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n            default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n        }\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n        }\n        return thumbTags;\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = \"\";\n        for (n = start; n < start+length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags, tag,\n            exifData, gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case \"LightSource\" :\n                    case \"Flash\" :\n                    case \"MeteringMode\" :\n                    case \"ExposureProgram\" :\n                    case \"SensingMethod\" :\n                    case \"SceneCaptureType\" :\n                    case \"SceneType\" :\n                    case \"CustomRendered\" :\n                    case \"WhiteBalance\" :\n                    case \"GainControl\" :\n                    case \"Contrast\" :\n                    case \"Saturation\" :\n                    case \"Sharpness\" :\n                    case \"SubjectDistanceRange\" :\n                    case \"FileSource\" :\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case \"ExifVersion\" :\n                    case \"FlashpixVersion\" :\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                        break;\n\n                    case \"ComponentsConfiguration\" :\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case \"GPSVersionID\" :\n                        gpsData[tag] = gpsData[tag][0] +\n                            \".\" + gpsData[tag][1] +\n                            \".\" + gpsData[tag][2] +\n                            \".\" + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        // extract thumbnail\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n\n        return tags;\n    }\n\n   function findXMPinJPEG(file) {\n\n        if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n        }\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n           if (debug) console.log(\"Not a valid JPEG\");\n           return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            dom = new DOMParser();\n\n        while (offset < (length-4)) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n                var startOffset = offset - 1;\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\n\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n                //Without these namespaces, XML is thought to be invalid by parsers\n                xmpString = xmpString.slice(0, indexOfXmp)\n                            + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" '\n                            + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" '\n                            + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" '\n                            + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" '\n                            + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" '\n                            + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" '\n                            + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" '\n                            + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" '\n                            + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" '\n                            + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" '\n                            + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '\n                            + xmpString.slice(indexOfXmp)\n\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\n                return xml2Object(domDocument);\n            } else{\n             offset++;\n            }\n        }\n    }\n\n    function xml2json(xml) {\n        var json = {};\n      \n        if (xml.nodeType == 1) { // element node\n          if (xml.attributes.length > 0) {\n            json['@attributes'] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n              var attribute = xml.attributes.item(j);\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n          }\n        } else if (xml.nodeType == 3) { // text node\n          return xml.nodeValue;\n        }\n      \n        // deal with children\n        if (xml.hasChildNodes()) {\n          for(var i = 0; i < xml.childNodes.length; i++) {\n            var child = xml.childNodes.item(i);\n            var nodeName = child.nodeName;\n            if (json[nodeName] == null) {\n              json[nodeName] = xml2json(child);\n            } else {\n              if (json[nodeName].push == null) {\n                var old = json[nodeName];\n                json[nodeName] = [];\n                json[nodeName].push(old);\n              }\n              json[nodeName].push(xml2json(child));\n            }\n          }\n        }\n        \n        return json;\n    }\n\n    function xml2Object(xml) {\n        try {\n            var obj = {};\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n                for(var idx in attributes) {\n                    var itemAtt = attributes[idx];\n                    var dataKey = itemAtt.nodeName;\n                    var dataValue = itemAtt.nodeValue;\n\n                    if(dataKey !== undefined) {\n                        obj[dataKey] = dataValue;\n                    }\n                }\n                var nodeName = item.nodeName;\n\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n            return obj;\n          } catch (e) {\n              console.log(e.message);\n          }\n    }\n\n    EXIF.enableXmp = function() {\n        EXIF.isXmpEnabled = true;\n    }\n\n    EXIF.disableXmp = function() {\n        EXIF.isXmpEnabled = false;\n    }\n\n    EXIF.getData = function(img, callback) {\n        if (((self.Image && img instanceof self.Image)\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\n            && !img.complete)\n            return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    EXIF.getTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    }\n    \n    EXIF.getIptcTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.iptcdata[tag];\n    }\n\n    EXIF.getAllTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n    \n    EXIF.getAllIptcTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.iptcdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n\n    EXIF.pretty = function(img) {\n        if (!imageHasData(img)) return \"\";\n        var a,\n            data = img.exifdata,\n            strPretty = \"\";\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == \"object\") {\n                    if (data[a] instanceof Number) {\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                    } else {\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                    }\n                } else {\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    EXIF.readFromBinaryFile = function(file) {\n        return findEXIFinJPEG(file);\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define('exif-js', [], function() {\n            return EXIF;\n        });\n    }\n}.call(this));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/exif-js/exif.js\n// module id = sbrb\n// module chunks = 9"],"sourceRoot":""}